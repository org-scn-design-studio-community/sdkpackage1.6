<?xml version="1.0" ?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">

  <name>ProcessFlow</name>
  <author>SAP SE</author>
  <documentation>Process Flow is a complex control that enables you to display documents or other items in their flow.</documentation>

  <baseType>sap.ui.core/Control</baseType>
  <properties>
    <property group="Misc" name="foldedCorners" type="sap.ui.core/boolean" defaultValue="false">
      <documentation>This property defines the folded corners for the single node control. The following values exist:
- true: means folded corner
- false/null/undefined: means normal corner</documentation>
    </property>
    <property group="Misc" name="scrollable" type="sap.ui.core/boolean" defaultValue="true">
      <documentation>By default, the control body is embedded into a scroll container of fixed size, so the user
can put the control into a fixe sized layout.
When the control body (the graph) gets larger than the container cuts the overflowing parts of the graph and the cut parts can be viewed by scroling the control body.
When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).

The scrolling feature can be turned off by setting this property value to false,
so the width/height of the whole control will change as the flow graph gets smaller/larger.
In this case the control body could not be scrolled, as the control body size matches the control container size.
</documentation>
    </property>
    <property group="Behavior" name="wheelZoomable" type="sap.ui.core/boolean" defaultValue="true">
    	<documentation>The property specifies if to enable semantic zooming by mouse wheel events on desktop browsers.</documentation>
    </property>
  </properties>
  <events>
    <event name="nodeTitlePress">
      <documentation>This event is fired when a process flow node title was
        clicked. The user can access the clicked process flow node control object which is the only argument of the event handler.
      </documentation>
      <deprecation since="1.26">Should not be used any longer, use nodePress event instead ( click on the node)</deprecation>
      <parameters>
        <parameter name="oEvent" type="sap.ui.core/object">
          <documentation>This object represents the wrapped process flow node object.</documentation>
        </parameter>
      </parameters>
    </event>
    <event name="nodePress">
      <documentation>This event is fired when a process flow node was clicked. The user can catch this event in addition to the title press event.</documentation>
      <parameters>
        <parameter name="oEvent" type="sap.ui.core/object">
          <documentation>This object represents the wrapped process flow node object.</documentation>
      </parameter>
      </parameters>
    </event>
    <event name="headerPress">
      <documentation>This event is fired when the the header column was clicked.</documentation>
      <parameters>
      <parameter name="oEvent" type="sap.ui.core/object">
      <documentation>This object represents the wrapped process flow lane header object.</documentation>
      </parameter>
      </parameters>
    </event>
    <event name="onError">
      <documentation>This event is fired when a problem occurs with the process flow calculation. Usually this means that there is a problem with the data. The console contains the detailed error description with the errors.</documentation>
      <parameters>
        <parameter name="oEvent" type="sap.ui.core/object">
          <documentation>This parameters contains the localized string with error message.</documentation>
        </parameter>
      </parameters>
    </event>
  </events>
  <aggregations>
    <aggregation cardinality="0..n" type="ProcessFlowConnection"
      name="connections" visibility="hidden">
      <documentation>This is the aggregation of the connection controls put
        into the table to the calculated cells.
      </documentation>
    </aggregation>
    <aggregation cardinality="0..n" name="nodes" type="ProcessFlowNode">
      <documentation>this is the aggregation of the node controls put into
        the table to the calculated cells.
      </documentation>
    </aggregation>
    <aggregation cardinality="0..n" name="lanes" type="ProcessFlowLaneHeader">
      <documentation>This is a header of the table for the process flow control.</documentation>
    </aggregation>
  </aggregations>
  <methods>
    <method name="getZoomLevel" type="ProcessFlowZoomLevel">
      <documentation>the method returns current zoom level of the control.</documentation>
    </method>
    <method name="setZoomLevel" type="ProcessFlowZoomLevel">
      <documentation>This method sets the new zoom level. If the input is wrong, it is ignored and the previous value stays.</documentation>
      <parameters>
        <parameter name="newZoomLevel" type="ProcessFlowZoomLevel">
          <documentation>This method sets new zoom level. The enumeration ensures that only available levels are used.</documentation>
        </parameter>
      </parameters>
    </method>
    <method name="zoomIn" type="ProcessFlowZoomLevel">
      <documentation>This method decreases the zoom level. More details are displayed in the node.</documentation>
    </method>
    <method name="zoomOut" type="ProcessFlowZoomLevel">
     <documentation>This method increases the zoom level. Less details are displayed in the node.</documentation>
    </method>
    <method name="updateModel" type="sap.ui.core/void">
      <documentation>This method triggers the update of the model and correspondingly the rerender method.</documentation>
    </method>
    <method name="getFocusedNode" type="sap.ui.core/string">
      <documentation>This method returns the nodeId of the node, which is focused.</documentation>
    </method>
    <method name="updateNodesOnly" type="sap.ui.core/void">
    	<documentation>This method should be called when the contents of the nodes were changed. It updates only the nodes and rerenders the ProcessFlow.</documentation>
    </method>
  </methods>
</control>